.onboarding-container {
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    background: #fafafa;
    position: relative;
    display: flex;
    flex-direction: column;
  }
  
  /* 1) The horizontal slides wrapper */
  .slides-wrapper {
    display: flex;
    flex-wrap: nowrap;
    width: 100%;
    height: 100%;
    touch-action: pan-y;
  
    .slide {
      width: 100%;
      flex: 0 0 100%;
      padding: 2rem;
      box-sizing: border-box;
  
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
  
      @media (min-width: 768px) {
        padding: 3rem 6rem;
      }
  
      h1 {
        font-size: 1.4rem;
        color: #333;
        margin-bottom: 1rem;
        text-align: center;
        @media (min-width: 768px) {
          font-size: 1.8rem;
        }
      }
  
      p {
        font-size: 1rem;
        color: #666;
        text-align: center;
        margin-bottom: 1rem;
        @media (min-width: 768px) {
          font-size: 1.1rem;
        }
      }
  
      .styled-input {
        width: 80%;
        max-width: 340px;
        margin: 0.5rem auto;
        padding: 1rem;
        font-size: 1rem;
        border: none;                      /* remove border */
        border-radius: 12px;              /* more rounded corners */
        background-color: #f2f2f2;        /* light gray background */
        color: #333;
        outline: none;
        transition: box-shadow 0.2s, background-color 0.2s;
      
        &:focus {
          box-shadow: 0 0 0 2px #a481ff;  /* purple focus ring */
          background-color: #fafafa;      /* slightly lighter on focus */
        }
      }
  
      .radio-group {
        display: flex;
        flex-direction: column;
        gap: 1rem;        /* space between options */
        width: 80%;
        max-width: 340px;
        margin: 0.5rem auto;
      }
      
      .radio-label {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0.75rem 1rem;
        background-color: #f2f2f2; /* same light gray */
        border-radius: 9999px;     /* super rounded for “pill” shape */
        cursor: pointer;
        font-size: 1rem;
        color: #333;
      
        /* Hide the original radio circle and rely on the label styling. */
        input[type='radio'] {
          position: absolute;  /* keep it stacked but hidden */
          opacity: 0;
          pointer-events: none;
        }
      
        /* If the radio is checked, highlight the label. 
           This trick works because the <input> is inside .radio-label. */
        input[type='radio']:checked + * {
          /* not needed unless you have extra sibling text,
             if your label is just the parent, we can do a :has() approach or extra logic. 
             Instead, here's a simpler approach below. */
        }
      }
      
      /* This approach uses the :has() selector (supported in modern browsers).
         If you need broader support, you'd dynamically add a class in TS/HTML. */
      .radio-label:has(input[type='radio']:checked) {
        background-color: #a481ff; /* highlight color */
        color: #fff;
      }
      
      /*****************************************************
       * 3) Interests Checkboxes: "pill" items (first pic)
       *****************************************************/
      .checkbox-item {
        display: inline-block; /* so they can wrap or fill multiple columns if you want */
        margin: 0.25rem;
        
        label {
          display: inline-flex;
          align-items: center;
          justify-content: center;
          padding: 0.75rem 1rem;
          background-color: #f2f2f2;
          border-radius: 9999px;
          font-size: 0.95rem;
          color: #333;
          cursor: pointer;
          position: relative;
          transition: background-color 0.2s, color 0.2s;
      
          /* Hide default checkmark; we’ll highlight pill instead. */
          input[type='checkbox'] {
            position: absolute;
            opacity: 0;
            pointer-events: none;
          }
      
          /* When checked => pill is colored & text is white. */
          input[type='checkbox']:checked + * {
            /* not used unless there's extra sibling text */
          }
        }
      
        /* Use :has() so the entire label pill changes color if its checkbox is checked. */
        label:has(input[type='checkbox']:checked) {
          background-color: #a481ff; /* or #4aa0ff if you want a blue fill like the sample */
          color: #fff;
        }
      }
    }
  }
  
  /* 2) Dot Indicators */
  .dots-container {
    position: absolute;
    bottom: 145px; /* Moved up further so there's more gap above the button */
    left: 0;
    right: 0;
    display: flex;
    justify-content: center;
    z-index: 10;
  
    .dot {
      width: 8px;
      height: 8px;
      background-color: #ccc; /* inactive color */
      border-radius: 50%;
      margin: 0 4px;
      transition: background-color 0.2s;
  
      &.active {
        background-color: #a481ff ; /* pink for active */
      }
    }
  }
  
  /* 3) The floating pink circular button + ring gap */
  .floating-button {
    position: absolute;
    bottom: 20px;
    left: 0;
    right: 0;
    display: flex;
    justify-content: center;
    z-index: 11;
  
    .progress-circle {
      width: 100px;   /* bigger outer size */
      height: 100px;
      border-radius: 50%;
      /* The partial pink/gray ring from 0 to degrees, degrees to 360. */
      background: conic-gradient(#a481ff  0deg, #a481ff  25deg, #fff 25deg, #fff 360deg);
      display: flex;
      align-items: center;
      justify-content: center;
      transition: background 0.3s ease;
  
      /* 1) The new white circle wrapper inside the ring. */
      .center-wrapper {
        width: 92px;   /* slightly smaller than 100 => 4px ring each side */
        height: 92px;
        background: #fff;         /* White background => visible gap. */
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
  
        /* 2) Then the actual pink button inside. */
        .arrow-button {
          background: #a481ff ;    /* Pink center */
          width: 76px;          /* leaves 8px white gap around it */
          height: 76px;
          border: none;
          outline: none;
          cursor: pointer;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          color: #fff;
          font-size: 1.4rem;
          transition: background-color 0.2s ease;
  
          &:hover {
            background-color: #a481ff ;
          }
  
          .arrow-icon {
            font-size: 1.3rem;
          }
        }
      }
    }
  }
  
  
  
  
  /* 4) Responsive tweaks for smaller screens */
  @media (max-width: 767px) {
    .slides-wrapper .slide h1 {
      font-size: 1.2rem;
    }
    .slides-wrapper .slide p {
      font-size: 0.95rem;
    }
  
    .floating-button .progress-circle {
      width: 100px;
      height: 100px;

      .center-wrapper {
        width: 92px;   /* slightly smaller than 100 => 4px ring each side */
        height: 92px;
     }
      .arrow-button {
       width: 76px;          /* leaves 8px white gap around it */
       height: 76px;
      }
    }
  }
  